### linux-headers

# Build Depends
# libelf、libelf-dev、elfutils-libelf-devel、libelf-devel
sudo apt-get install flex bison libssl-dev bc libelf-dev ncurses-dev

# Configuration
make x86_64_defconfig
make menuconfig

or
cp /boot/config-* .config

ARCH=686
ARCH=amd64

########################################################
# Patch for Denian Distribution Name
########################################################
KERNVER=$(cat .config | grep 'Linux/x86' | awk '{print $3}')
BUILD_DIR=$HOME/Build/linux-headers-${KERNVER}-${ARCH}/usr/src/linux-headers-${KERNVER}-${ARCH}
KARCH=x86

export DISTRIBUTION_OFFICIAL_BUILD=1
export DISTRIBUTOR="Tinycore"
export DISTRIBUTION_VERSION=$KERNVER
export KBUILD_BUILD_VERSION_TIMESTAMP="${DISTRIBUTOR} ${KERNVER} ($(date +%Y-%m-%d))"
sed -i 's/LINUX_COMPILE_BY=.*/LINUX_COMPILE_BY=tinycore/g' scripts/mkcompile_h
sed -i 's/LINUX_COMPILE_HOST=.*/LINUX_COMPILE_HOST=devel.org/g' scripts/mkcompile_h
sed -i '/UTS_RELEASE/s/KERNELRELEASE)/KERNELRELEASE)-'$ARCH'/g' Makefile

# edit scripts/mkcompile_h
# LINUX_COMPILER \"`$CC -v 2>&1 | grep ' version '`\"
# to
# LINUX_COMPILER \"`$CC -v 2>&1 | grep ' version ' | sed 's/ (.*//g'`\"

########################################################
# Patch for Ubuntu Distribution Name
########################################################
KERNVER=$(cat .config | grep 'Linux/x86' | awk '{print $3}')
BUILD_DIR=$HOME/Build/linux-headers-${KERNVER}/usr/src/linux-headers-${KERNVER}
KARCH=x86

export KBUILD_BUILD_VERSION=45-Ubuntu
sed -i '/UTS_RELEASE/s/$(KERNELRELEASE)/'$KERNVER'/g' Makefile


# Initialization headers
make CONFIG_XEN=y CONFIG_BUILD_BIN2C=y CONFIG_KALLSYMS=y CONFIG_LOGO=y \
CONFIG_VT=y BUILD_C_RECORDMCOUNT=y CONFIG_MODULE_SIG=y \
CONFIG_SYSTEM_TRUSTED_KEYRING=y CONFIG_MODVERSIONS=y prepare
make init
make __headers

# Initialization kbuild
make scripts
make tools/objtool
find scripts \( -name .*.cmd -o -name *.o \) -execdir rm {} +
find tools/objtool \( -name .*.cmd -o -name *.o \) -execdir rm {} +

install -Dt ${BUILD_DIR} -m644 Makefile .config Module.symvers
install -Dt "${BUILD_DIR}/kernel" -m644 kernel/Makefile

cp -t "${BUILD_DIR}" -a include scripts

install -Dt "${BUILD_DIR}/arch/${KARCH}" -m644 arch/${KARCH}/Makefile
install -Dt "${BUILD_DIR}/arch/${KARCH}/kernel" -m644 arch/${KARCH}/kernel/asm-offsets.s

cp -t "${BUILD_DIR}/arch/${KARCH}" -a arch/${KARCH}/include

install -Dt "${BUILD_DIR}/drivers/md" -m644 drivers/md/*.h
install -Dt "${BUILD_DIR}/net/mac80211" -m644 net/mac80211/*.h
install -Dt "${BUILD_DIR}/drivers/media/dvb-core" -m644 drivers/media/dvb-core/*.h
install -Dt "${BUILD_DIR}/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h
install -Dt "${BUILD_DIR}/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
install -Dt "${BUILD_DIR}/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
install -Dt "${BUILD_DIR}/drivers/media/tuners" -m644 drivers/media/tuners/*.h

mkdir -p "${BUILD_DIR}"/{fs/xfs,mm}

find . -name Makefile\* -exec install -Dm644 {} "${BUILD_DIR}/{}" \;
find . -name Kconfig\* -exec install -Dm644 {} "${BUILD_DIR}/{}" \;

install -Dt "${BUILD_DIR}/tools/objtool" tools/objtool/objtool

# remove unneeded architectures
local _arch
for _arch in "${BUILD_DIR}"/arch/*/; do
    [[ ${_arch} == */${KARCH}/ ]] && continue
    rm -r "${_arch}"
done

# remove files already in linux-docs package
rm -r "${BUILD_DIR}/Documentation"

# remove now broken symlinks
find -L "${BUILD_DIR}" -type l -printf 'Removing %P\n' -delete

# Fix permissions
chmod -R u=rwX,go=rX "${BUILD_DIR}"

# strip scripts directory
local _binary _strip
while read -rd '' _binary; do
    case "$(file -bi "${_binary}")" in
      *application/x-sharedlib*)  _strip="${STRIP_SHARED}"   ;; # Libraries (.so)
      *application/x-archive*)    _strip="${STRIP_STATIC}"   ;; # Libraries (.a)
      *application/x-executable*) _strip="${STRIP_BINARIES}" ;; # Binaries
      *) continue ;;
    esac
    /usr/bin/strip ${_strip} "${_binary}"
done < <(find "${BUILD_DIR}/scripts" -type f -perm -u+w -print0 2>/dev/null)

# Clean files
find $BUILD_DIR \( -name .*.cmd -o -name *.o \) -execdir rm {} +
find $BUILD_DIR \( -name .gitignore \) -execdir rm {} +

mkdir -p $HOME/Build/linux-headers-${KERNVER}-${ARCH}/lib/modules/linux-headers-${KERNVER}-${ARCH}
ln -sf /usr/src/linux-headers-${KERNVER}-${ARCH} $HOME/Build/linux-headers-${KERNVER}-${ARCH}/lib/modules/linux-headers-${KERNVER}-${ARCH}/build
